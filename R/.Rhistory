Fstart <- rbind(Fstart1, Fstart2, Fstart3)
out <- pfa(data, K=3, F=Fstart)
out$F
node1 <- c(2, 2, 5, 100, 40, 1, 25, 5, 10, 0);
sd <- c(2, 2, 10, 10, 4, 0.6, 30, 20, 0.05, 50)
node2 <- c(15, 5, 10, 50, 30, 20, 4, 0.4, -2, 10);
data <- as.numeric()
seq_val <- seq(0,1,length.out = 100)
for(q in 1:length(seq_val)){
temp <- array(0,length(node1));
for(n in 1:length(node1)){
temp[n] <- rnorm(1,(1-seq_val[q])*node1[n] + (seq_val[q])*node2[n],sd[n]);
}
data <- rbind(data, temp)}
Fstart1 <- runif(10, 0, 500)
Fstart2 <- runif(10, 0, 500)
Fstart <- rbind(Fstart1, Fstart2)
out <- pfa(data, K=2, F=Fstart)
out
out
out$F
setwd("~/Documents/count-clustering/project/R")
data <- get(load("../rdas/pc_gtex_v6_x.rda"))
dim(data)
choose(8555,2)
setwd("~/Documents/count-clustering/project/R")
samples_id <- read.table("../external_data/GTEX_V6/samples_id.txt")
tissue_labels <- factor(samples_id[,3])
numtypes <- length(unique(tissue_labels))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
color1 <- sample(color, 53)
species_col <- rev(color1)[as.numeric(tissue_labels)]
hc_gtex <- get(load("../rdas/hclust_gtex.rda"))
hc_gtex
hc_gtex$labels
hc_gtex$height
numtypes <- length(unique(tissue_labels))
numtypes
samples_id <- read.table("../external_data/GTEX_V6/samples_id.txt")
tissue_labels <- factor(samples_id[,3])
numtypes <- length(unique(tissue_labels))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
color1 <- sample(color, 53)
species_col <- rev(color1)[as.numeric(tissue_labels)]
hc_gtex <- get(load("../rdas/hclust_gtex.rda"))
gtex_celltypes <- rev(levels(tissue_labels))
library(dendextend)
dend <- as.dendrogram(hc_gtex)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:8555)
# Color the branches based on the clusters:
#dend <- color_branches(dend, k=6) #, groupLabels=iris_species)
# Manually match the labels, as much as possible, to the real classification of the flowers:
#labels_colors(dend) <-
#  rainbow_hcl(numtypes)[sort_levels_values(
#    as.numeric(celltype_labels)[order.dendrogram(dend)]
#  )]
#labels(dend) <- paste(as.character(celltype_labels)[order.dendrogram(dend)],
#                      "(",labels(dend),")",
#                      sep = "")
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
labels(dend) <- rep("",length(species_col))
dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", 0.5)
# And plot:
pdf("../plots/dendextend_gtex.pdf")
par(mar = c(3,3,3,3))
plot(dend,
main = "Clustered GTEx all tissues data
(Labels give true tissue states)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = gtex_celltypes, fill = color1[numtypes], ncol=2, cex=0.5)
dev.off()
pdf("../plots/dendextend_gtex.pdf")
par(mar = c(3,3,3,3))
plot(dend,
main = "Clustered GTEx all tissues data
(Labels give true tissue states)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = gtex_celltypes, fill = color1[1:numtypes], ncol=2, cex=0.5)
dev.off()
deng_celltypes
library(singleCellRNASeqMouseDeng2014)
library(CountClust)
library(ggplot2)
counts <- exprs(Deng2014MouseESC)
meta_data <- pData(Deng2014MouseESC)
gene_names <- rownames(counts)
meta_data$cell_type
meta_data$cell_type[1:10]
species_col <- rev(rainbow_hcl(numtypes))[as.numeric(celltype_labels)]
species_col <- rev(color1[1:numtypes])[as.numeric(tissue_labels)]
species_col
library(singleCellRNASeqMouseDeng2014)
library(CountClust)
library(ggplot2)
counts <- exprs(Deng2014MouseESC)
meta_data <- pData(Deng2014MouseESC)
gene_names <- rownames(counts)
voom_counts <- limma::voom(counts)$E;
celltype_labels <- meta_data$cell_type
numtypes <- length(unique(celltype_labels))
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(numtypes))[as.numeric(celltype_labels)]
d_deng <- dist(t(voom_counts)) # method="man" # is a bit better
hc_deng <- hclust(d_deng, method = "complete")
deng_celltypes <- rev(levels(celltype_labels))
library(dendextend)
dend <- as.dendrogram(hc_deng)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:259)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend
dend
labels(dend)
labels(hc_deng)
samples_id <- read.table("../external_data/GTEX_V6/samples_id.txt")
tissue_labels <- factor(samples_id[,3])
numtypes <- length(unique(tissue_labels))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
color1 <- sample(color, 53)
species_col <- rev(color1[1:numtypes])[as.numeric(tissue_labels)]
hc_gtex <- get(load("../rdas/hclust_gtex.rda"))
labels(hc_gtex)
species_col <- rev(color1[1:numtypes])[as.numeric(tissue_labels)]
species_col
match(labels(hc_gtex),tissue_labels)
match(labels(hc_gtex),as.character(tissue_labels))
labels(hc_gtex)
as.character(tissue_labels)
samples_id
samples_id[1:10,]
library(data.table)
cis_data <- data.frame(fread("../external_data/GTEX_V6/cis_gene_expression.txt"))
dim(cis_data)
colnames(cis_data)
length(hc_gtex)
length(labels(hc_gtex))
min(labels(hc_gtex))
min(colnames(cis_data))
colnames(cis_data)[1:10]
order(hc_gtex)
hc_gtex <- get(load("../rdas/hclust_gtex.rda"))
order(hc_gtex)
hc_gtex[[3]]
hc_gtex_brain <- get(load("../rdas/hc_gtex_brain.rda"))
gtex_brain_celltypes <- rev(levels(celltype_labels))
library(dendextend)
dend <- as.dendrogram(hc_gtex_brain)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:1259)
# Color the branches based on the clusters:
#dend <- color_branches(dend, k=6) #, groupLabels=iris_species)
# Manually match the labels, as much as possible, to the real classification of the flowers:
#labels_colors(dend) <-
#  rainbow_hcl(numtypes)[sort_levels_values(
#    as.numeric(celltype_labels)[order.dendrogram(dend)]
#  )]
#labels(dend) <- paste(as.character(celltype_labels)[order.dendrogram(dend)],
#                      "(",labels(dend),")",
#                      sep = "")
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
labels(dend) <- rep("",length(species_col))
dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", 0.5)
# And plot:
pdf("../plots/dendextend_gtex_brain.pdf")
par(mar = c(3,3,3,3))
plot(dend,
main = "Clustered GTEx Brain data set
(Labels give true tissue states)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = gtex_brain_celltypes, fill = rainbow_hcl(numtypes))
dev.off()
###############   dendextend  GTEx whole tissues  #####################
library(data.table)
cis_data <- data.frame(fread("../external_data/GTEX_V6/cis_gene_expression.txt"))
samples_id <- read.table("../external_data/GTEX_V6/samples_id.txt")
tissue_labels <- factor(samples_id[,3])
numtypes <- length(unique(tissue_labels))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
color1 <- sample(color, 53)
species_col <- rev(color1[1:numtypes])[as.numeric(tissue_labels)]
hc_gtex <- get(load("../rdas/hclust_gtex.rda"))
order <- hc_gtex[[3]]
species_col_adjusted <- species_col[order];
gtex_celltypes <- rev(levels(tissue_labels))
library(dendextend)
dend <- as.dendrogram(hc_gtex)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:8555)
# Color the branches based on the clusters:
#dend <- color_branches(dend, k=6) #, groupLabels=iris_species)
# Manually match the labels, as much as possible, to the real classification of the flowers:
#labels_colors(dend) <-
#  rainbow_hcl(numtypes)[sort_levels_values(
#    as.numeric(celltype_labels)[order.dendrogram(dend)]
#  )]
#labels(dend) <- paste(as.character(celltype_labels)[order.dendrogram(dend)],
#                      "(",labels(dend),")",
#                      sep = "")
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col_adjusted)
labels(dend) <- rep("",length(species_col))
dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", 0.5)
# And plot:
pdf("../plots/dendextend_gtex.pdf")
par(mar = c(3,3,3,3))
plot(dend,
main = "Clustered GTEx all tissues data
(Labels give true tissue states)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = gtex_celltypes, fill = color1[1:numtypes], ncol=2, cex=0.5)
dev.off()
species_col_adjusted
species_col
species_col_adjusted
hc_gtex <- get(load("../rdas/hclust_gtex.rda"))
order <- hc_gtex[[3]]
species_col_adjusted <- species_col[order];
species_col
species_col_adjusted
species_col_adjusted[1:20]
species_col[1:20]
gtex_celltypes <- rev(levels(tissue_labels))
library(dendextend)
dend <- as.dendrogram(hc_gtex)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:8555)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col_adjusted)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
species_col <- rev(color1[1:numtypes])[as.numeric(tissue_labels)]
species_col <- rev(color1)[as.numeric(tissue_labels)]
species_col
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- rotate(dend, 1:8555)
dend <- as.dendrogram(hc_gtex)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:8555)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
library(singleCellRNASeqMouseDeng2014)
library(CountClust)
library(ggplot2)
counts <- exprs(Deng2014MouseESC)
meta_data <- pData(Deng2014MouseESC)
gene_names <- rownames(counts)
voom_counts <- limma::voom(counts)$E;
celltype_labels <- meta_data$cell_type
numtypes <- length(unique(celltype_labels))
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(numtypes))[as.numeric(celltype_labels)]
d_deng <- dist(t(voom_counts)) # method="man" # is a bit better
hc_deng <- hclust(d_deng, method = "complete")
labels(hc_deng)
deng_celltypes <- rev(levels(celltype_labels))
library(dendextend)
dend <- as.dendrogram(hc_deng)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:259)
order(hc_deng)
hc_deng$order
species_col <- rev(rainbow_hcl(numtypes))[as.numeric(celltype_labels)]
species_col
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- as.dendrogram(hc_deng)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:259)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
library(singleCellRNASeqMouseDeng2014)
library(CountClust)
library(ggplot2)
counts <- exprs(Deng2014MouseESC)
meta_data <- pData(Deng2014MouseESC)
gene_names <- rownames(counts)
voom_counts <- limma::voom(counts)$E;
celltype_labels <- meta_data$cell_type
numtypes <- length(unique(celltype_labels))
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(numtypes))[as.numeric(celltype_labels)]
d_deng <- dist(t(voom_counts)) # method="man" # is a bit better
hc_deng <- hclust(d_deng, method = "complete")
labels(hc_deng)
hc_deng$order
deng_celltypes <- rev(levels(celltype_labels))
library(dendextend)
dend <- as.dendrogram(hc_deng)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:259)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
labels(dend) <- rep("", length(species_col))
# Color the branches based on the clusters:
#dend <- color_branches(dend, k=6) #, groupLabels=iris_species)
# Manually match the labels, as much as possible, to the real classification of the flowers:
#labels_colors(dend) <-
#  rainbow_hcl(numtypes)[sort_levels_values(
#    as.numeric(celltype_labels)[order.dendrogram(dend)]
#  )]
#labels(dend) <- paste(as.character(celltype_labels)[order.dendrogram(dend)],
#                     "(",labels(dend),")",
#                      sep = "")
dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", 0.5)
# And plot:
pdf("../plots/dendextend_deng.pdf")
par(mar = c(3,3,3,3))
plot(dend,
main = "Clustered Deng et al data set
(Labels give true developmental stages)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = deng_celltypes, fill = rainbow_hcl(numtypes))
dev.off()
library(dendextend)
library(dendextendRcpp)
iris <- datasets::iris
iris2 <- iris[,-5]
species_labels <- iris[,5]
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
d_iris <- dist(iris2) # method="man" # is a bit better
hc_iris <- hclust(d_iris, method = "complete")
iris_species <- rev(levels(iris[,5]))
library(dendextend)
dend <- as.dendrogram(hc_iris)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:150)
# Color the branches based on the clusters:
#dend <- color_branches(dend, k=3) #, groupLabels=iris_species)
# Manually match the labels, as much as possible, to the real classification of the flowers:
#labels_colors(dend) <-
#  rainbow_hcl(3)[sort_levels_values(
#    as.numeric(iris[,5])[order.dendrogram(dend)]
#  )]
#labels(dend) <- paste(as.character(iris[,5])[order.dendrogram(dend)],
#                      "(",labels(dend),")",
#                      sep = "")
# We hang the dendrogram a bit:
labels(dend) <- rep("",length(species_col))
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- hang.dendrogram(dend,hang_height=0.1)
# reduce the size of the labels:
# dend <- assign_values_to_leaves_nodePar(dend, 0.5, "lab.cex")
dend <- set(dend, "labels_cex", 0.5)
# And plot:
pdf("../plots/dendextend_iris.pdf")
par(mar = c(3,3,3,3))
plot(dend,
main = "Clustered Iris data set
(the labels give the true flower species)",
horiz =  TRUE,  nodePar = list(cex = .007))
legend("topleft", legend = iris_species, fill = rainbow_hcl(3))
dev.off()
dend <- dend %>% set("leaves_pch", value=15) %>% set("leaves_cex", value=1) %>% set("leaves_col", species_col)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("labels_col", value = "") %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("labels_col", value = "1") %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("labels_col", value = c()) %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- as.dendrogram(hc_iris)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:150)
dend <- dend %>% set("labels_col", value = c()) %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("labels_col", value = c(1)) %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("labels_col", value = c("red")) %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("labels_col", value = c(3,4)) %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("labels_col", value = c(3,4)) %>% set("leaves_pch", value = c(15)) %>% set("leaves_cex", value = c(1)) %>% set("leaves_col", value = species_col)
labels(dend) <- rep("",length(species_col))
leaves_col(dend) <- species_col;
leaves_pch(dend) <- 15
leaves_cex(dend) <- 1
dend <- dend %>% set("leaves_pch", value = c(15)) %>% set("leaves_cex", value = c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("leaves_pch", c(15)) %>% set("leaves_cex", c(1)) %>% set("leaves_col", species_col)
dend <- dend %>% set("leaves_pch", 15) %>% set("leaves_cex", 1) %>% set("leaves_col", species_col)
dend
library(dendextend)
library(dendextendRcpp)
iris <- datasets::iris
iris2 <- iris[,-5]
species_labels <- iris[,5]
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
d_iris <- dist(iris2) # method="man" # is a bit better
hc_iris <- hclust(d_iris, method = "complete")
iris_species <- rev(levels(iris[,5]))
library(dendextend)
dend <- as.dendrogram(hc_iris)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:150)
# Color the branches based on the clusters:
#dend <- color_branches(dend, k=3) #, groupLabels=iris_species)
# Manually match the labels, as much as possible, to the real classification of the flowers:
#labels_colors(dend) <-
#  rainbow_hcl(3)[sort_levels_values(
#    as.numeric(iris[,5])[order.dendrogram(dend)]
#  )]
#labels(dend) <- paste(as.character(iris[,5])[order.dendrogram(dend)],
#                      "(",labels(dend),")",
#                      sep = "")
# We hang the dendrogram a bit:
labels(dend) <- rep("",length(species_col))
leaves_col(dend) <- species_col;
leaves_pch(dend) <- 15
leaves_cex(dend) <- 1
dend <- dend %>% set("leaves_pch", 15) %>% set("leaves_cex", 1) %>% set("leaves_col", species_col)
library(dendextend)
library(dendextendRcpp)
iris <- datasets::iris
iris2 <- iris[,-5]
species_labels <- iris[,5]
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
d_iris <- dist(iris2) # method="man" # is a bit better
hc_iris <- hclust(d_iris, method = "complete")
iris_species <- rev(levels(iris[,5]))
library(dendextend)
dend <- as.dendrogram(hc_iris)
# order it the closest we can to the order of the observations:
dend <- rotate(dend, 1:150)
# Color the branches based on the clusters:
#dend <- color_branches(dend, k=3) #, groupLabels=iris_species)
# Manually match the labels, as much as possible, to the real classification of the flowers:
#labels_colors(dend) <-
#  rainbow_hcl(3)[sort_levels_values(
#    as.numeric(iris[,5])[order.dendrogram(dend)]
#  )]
#labels(dend) <- paste(as.character(iris[,5])[order.dendrogram(dend)],
#                      "(",labels(dend),")",
#                      sep = "")
# We hang the dendrogram a bit:
labels(dend) <- rep("",length(species_col))
dend <- dend %>% set("leaves_pch", 15) %>% set("leaves_cex", 1) %>% set("leaves_col", species_col)
44*43
200/1892
350/1892
setwd("~/Documents/ancient-damage/R")
signature_counts <- get(load("../summary_data/signature-counts-clubbed-Lindo2016.rda"))
signature_set <- colnames(signature_counts)
signature_set
signature_counts <- get(load("../summary_data/signature-counts-clubbed-Lindo2016.rda"))
dim(signature_counts)
topic_fit <- maptpx::topics(signature_counts, K=2);
fit_factors <- topic_fit$theta;
fit_omega <- topic_fit$omega;
dim(fit_factors)
flash_fit <- flashpool(t(signature_counts),
K=2,
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = fit_factors, fix_factor = TRUE,
nonnegative=FALSE)
library(flashr)
flash_fit <- flashpool(t(signature_counts),
K=2,
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = fit_factors, fix_factor = TRUE,
nonnegative=FALSE)
flash_fit <- flashpool(t(signature_counts),
K=2,
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = t(fit_factors), fix_factor = TRUE,
nonnegative=FALSE)
flash_fit <- flashpool(signature_counts,
K=2,
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = fit_factors, fix_factor = TRUE,
nonnegative=FALSE)
flash_fit <- flashpool(t(signature_counts),
K=2,
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = fit_omega, fix_factor = TRUE,
nonnegative=FALSE)
flash_fit <- flashpool(t(signature_counts),
K=2,
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = t(fit_omega), fix_factor = TRUE,
nonnegative=FALSE)
signature_counts <- get(load("../summary_data/signature-counts-clubbed-Lindo2016.rda"))
signature_set <- colnames(signature_counts)
topic_fit <- maptpx::topics(signature_counts, K=2);
fit_factors
dim(fit_factors)
dim(fit_omega)
flash_fit <- flash(t(signature_counts),
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = fit_omega[,1], fix_factor = TRUE,
nonnegative=FALSE)
library(flashr)
library(rcpp)
library(Rcpp)
library(RcppArmadillo)
flash_fit <- flash(t(signature_counts),
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = fit_omega[,1], fix_factor = TRUE,
nonnegative=FALSE)
flash_fit <- flash(t(signature_counts),
tol=1e-5, maxiter_r1 = 50,
partype="constant",
factor_value = as.vector(fit_omega[,1]), fix_factor = TRUE,
nonnegative=FALSE)
