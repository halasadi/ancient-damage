qplot(carat, price, data = dsmall, geom = "boxplot")
qplot(carat, data = diamonds, geom = "histogram")
qplot(carat, data = diamonds, geom = "density")
qplot(carat, data = diamonds, geom = c("histogram", "density"))
qplot(carat, data = diamonds, geom = "histogram")
qplot(carat, data = diamonds, geom = "histogram", breaks=40)
qplot(carat, data = diamonds, geom = "histogram",  binwidth = 1)
qplot(carat, data = diamonds, geom = "histogram",  binwidth = 0.01)
qplot(carat, data = diamonds, geom = "histogram",  binwidth = 0.01, fill=colors)
qplot(carat, data = diamonds, geom = "histogram",  binwidth = 0.01, fill=colour)
qplot(carat, data = diamonds, geom = "histogram",  binwidth = 0.01, fill=color)
qplot(carat, data = diamonds, geom = "histogram",  binwidth = 0.01, colours=color)
qplot(carat, data = diamonds, geom = "histogram",  binwidth = 0.01, colour=color)
qplot(carat, data = diamonds, geom = "density",  binwidth = 0.01, colour=color)
qplot(carat, data = diamonds, geom = "density", colour=color)
qplot(color, data = diamonds, geom = "bar")
qplot(color, data = diamonds, geom = "bar", weight = carat) +
scale_y_continuous("carat")
qplot(color, data = diamonds, geom = "bar", weight = carat)
qplot(carat, ..density.., data = diamonds, facets = color ~ .,
geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(carat, data = diamonds, facets = color ~ .,
geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
warning()
qplot(carat, price, data = dsmall, colour = I('red'))
qplot(displ, hwy, data = mpg, colour = factor(cyl))
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="line") +
opts(drop = "legend_box")
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="line")
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="line") + opts(drop = "legend_box")
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="line") + theme(drop = "legend_box")
qplot(displ, hwy, data=mpg, colour=factor(cyl), geom="bar",
stat="identity", position = "identity")
qplot(displ, hwy, data=mpg, colour=factor(cyl)) +
geom_smooth(data= subset(mpg, cyl != 5), method="lm")
qplot(displ, hwy, data=mpg, colour=factor(cyl))
qplot(displ, hwy, data=mpg, colour=factor(cyl)) +
geom_smooth(data= subset(mpg, cyl != 5), method="lm")
qplot(displ, hwy, data=mpg, colour=factor(cyl)) +
geom_smooth(data= mpg, method="lm")
qplot(displ, hwy, data=mpg, facets = . ~ year) + geom_smooth()
+ theme(legend.position = 'none')
x <- 1:10
y <- factor(letters[1:5])
qplot(x, x, size = x)
qplot(x, x, size = x) + theme(legend.position = 'none')
x <- 1:10
y <- factor(letters[1:5])
qplot(x, x, size = x)
x1 <- c(1,10)
y1 <- c(1, 5)
p <- qplot(x1, y1, geom="blank", xlab=NULL, ylab=NULL) + theme_bw()
p
p
p + coord_trans(y="log10")
p + coord_polar()
qplot(displ, hwy, data = mpg, colour = factor(cyl))+ theme_bw()
p <- qplot(displ, hwy, data = mpg, colour = factor(cyl))
summary(p)
qplot(displ, hwy, data = mpg, colour = factor(cyl))
qplot(displ, hwy, data = mpg, colour = factor(cyl), geom="bar")
qplot(displ, hwy, data = mpg, colour = factor(cyl), geom="line")
library(devtools)
install_github("kkdey/GOTnames")
data(GOT.names)
rm(list=ls())
library(devtools)
install_github("kkdey/GOTnames")
data(GOT.names)
library(devtools)
install_github("kkdey/GOTnames")
data(GoT.names)
library(devtools)
install_github("kkdey/GOTnames")
library(GOTnames)
data(GOT.names)
data(GoT.names)
GOTnames::GoT.names
GoT.names
2/5
8/50
16/50
6/50
8/50
16/30
6/30
8/30
2/18
16/18
10/16
6/16
d <- data.frame(
gender_id<- c("M","M","M","F","F","F"),
entertain_id <- c("Dance", "Sports", "TV", "Dance", "Sports", "TV"),
values <- c(0.04, 0.2, 0.16, 0.32, 0.12, 0.16))
require(lattice)
barchart(values ~ gender_id, groups=entertain_id, data=d, auto.key = list(columns = 2))
barchart(values ~ entertain_id, groups=gender_id, data=d, auto.key = list(columns = 3))
sample(1:50, 34, replace = TRUE)
sample(1:50, 34, replace = )
sample(1:50, 34, replace = FALSE)
34/50 -16/50
10/34 - 4/16
-(0.06)/(sqrt(0.64)sqrt(0.36))
-(0.06)/(sqrt(0.64)*sqrt(0.36))
-sqrt(128)*(0.06)/(sqrt(0.64)*sqrt(0.36))
-sqrt(128)*((0.06)/(sqrt(0.64)*sqrt(0.36)))
sqrt(128)*((0.04)/(sqrt(0.64)*sqrt(0.36)))
pnorm(0.942809, 0, 1) - pnorm(-1.414214, 0, 1)
pnorm(1.96, 0, 1) - pnorm(-1.96, 0, 1)
0.64 - 1.96*(sqrt(0.64)*sqrt(0.36))/(sqrt(128))
0.64 + 1.96*(sqrt(0.64)*sqrt(0.36))/(sqrt(128))
80/124
124*0.25
128*0.25
(79.5-62)/sqrt(31)
pbinom(3.14,0,1)
pbinom(3.14,0,1,lower.tail=FALSE)
pnorm(3.14,0,1,lower.tail=FALSE)
qt(0.025, 128)
qt(0.025, 123)
qt(0.975, 123)
qnorm(0.025, 0, 1)
0.64 - 1.98 * sqrt(0.64*0.36/124)
0.64 + 1.98 * sqrt(0.64*0.36/124)
qnorm(0.05, 0, 1)
0.64 - 1.64 * sqrt(0.64*0.36/124)
qt(0.05, 123)
0.64 - 1.657 * sqrt(0.64*0.36/124)
replicate(1000, sum(sample(obs.vec, replace=TRUE)))
obs.samp <- c(rep(1,80), rep(0, 44));
replicate(1000, sum(sample(obs.vec, replace=TRUE)))
replicate(1000, sum(sample(obs.samp, replace=TRUE)))
bootstrap_prop <- bootstrap_counts/124;
sort(bootstrap_prop)
obs.samp <- c(rep(1,80), rep(0, 44));
bootstrap_counts <- replicate(1000, sum(sample(obs.samp, replace=TRUE)))
head(bootstrap_counts)
summary(bootstrap_counts)
bootstrap_prop <- bootstrap_counts/124;
sort(bootstrap_prop)
quantile(0.025, bootstrap_prop)
quantile(bootstrap_prop, 0.025)
quantile(bootstrap_prop, 0.975)
obs.samp <- c(rep(1,80), rep(0, 44));
set.seed(100)
bootstrap_counts <- replicate(1000, sum(sample(obs.samp, replace=TRUE)))
head(bootstrap_counts)
summary(bootstrap_counts)
bootstrap_prop <- bootstrap_counts/124;
sort(bootstrap_prop)
## 2-sided
quantile(bootstrap_prop, 0.025)
quantile(bootstrap_prop, 0.975)
## 1-sided
quantile(bootstrap_prop, 0.05)
obs.samp <- c(rep(1,80), rep(0, 44));
set.seed(100)
bootstrap_counts <- replicate(1000, sum(sample(obs.samp, replace=TRUE)))
head(bootstrap_counts)
summary(bootstrap_counts)
bootstrap_prop <- bootstrap_counts/124;
sort(bootstrap_prop)
## 2-sided
quantile(bootstrap_prop, 0.025)
quantile(bootstrap_prop, 0.975)
## 1-sided
quantile(bootstrap_prop, 0.05)
0.64 - 1.96 * sqrt(0.50*0.50/124)
0.64 + 1.96 * sqrt(0.50*0.50/124)
0.50 + 1.96 * sqrt(0.50*0.50/124)
0.50 - 1.96 * sqrt(0.50*0.50/124)
124*0.5880066
124*0.4119934
0.50 - 1.96 * sqrt(0.64*0.36/124)
0.50 + 1.96 * sqrt(0.64*0.36/124)
2/5*8
qnorm(3.,0,1)
qnorm(3.2,0,1)
pnorm(3.2,0,1)
1 - pnorm(3.2,0,1)
5/2*(0.658-1)
pnorm(-0.855,0,1)
x <- c(8, 10, 13, 15, 16, 18, 1000);
mean(x)
x <- c(8, 10, 13, 15, 16, 18, 1000);
t=sqrt(n)*(mean(x)-14)/sd(x)
t
t=sqrt(length(x))*(mean(x)-14)/sd(x)
t
mean(x)
sd(x)
x <- c(8, 10, 13, 15, 16, 18, 10^7);
t=sqrt(length(x))*(mean(x)-14)/sd(x)
t
x <- c(8, 10, 13, 15, 16, 18, 10^7, 10^3);
t=sqrt(length(x))*(mean(x)-14)/sd(x)
t
x <- c(8, 10, 13, 15, 16, 18, 100);
t=sqrt(length(x))*(mean(x)-14)/sd(x)
t
pt(t,6)
x <- c(8, 10, 13, 15, 16, 18, 1000);
sumy <- sum(x>14);
sumy
pvalue <- pbinom(3,7,0.5) + (1-pbinom(4,7,0.5));
pvalue
4/7
sqrt(7)*(0.57-0.5)/0.5
pnorm(-0.37,0,1)
pnorm(-0.37,0,1)*2
dbinom(3,6,0.5)
1-0.3125
sqrt(6)*(0.66-0.5)/0.5
pnorm(-0.78,0,1)
pvalue <- pbinom(3,7,0.5) + (1-pbinom(3,7,0.5));
pvalue
library(biomaRt)
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl");
human
devtools::install_github("jhsiao999/singleCellRNASeqMouseBuettnerESC", force=TRUE)
library(singleCellRNASeqMouseBuettnerESC)
data("MouseBuettnerESC")
buettner_gene_names <- Biobase::featureNames(MouseBuettnerESC);
buettner_data <- Biobase::exprs(MouseBuettnerESC);
buettner_metadata <- Biobase::pData(MouseBuettnerESC)
buettner_cell_state <- buettner_metadata$cell_cycle;
table(buettner_cell_state)
library(biomaRt)
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl");
attributes = c("ensembl_gene_id","mmusculus_homolog_ensembl_gene",
"mmusculus_homolog_perc_id_r1")
attributes=c(attributes,"mmusculus_homolog_orthology_type",
"mmusculus_homolog_subtype", "mmusculus_homolog_perc_id")
orth.mouse.human = getBM(attributes,
filters="with_homolog_mmus",values=TRUE, mart = human,
uniqueRows=TRUE)
orth.mouse.human
orth.mouse.human$mmusculus_homolog_ensembl_gene
library(biomaRt)
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
human
human
genes.with.id=getBM(attributes=c("ensembl_gene_id", "external_gene_id"),values=gene_names, mart= ensembl)
genes.with.id=getBM(attributes=c("ensembl_gene_id", "external_gene_id"),values=c("ABCA1","ABCBB"), mart= ensembl)
genes.with.id=getBM(attributes=c("ensembl_gene_id", "external_gene_id"),values=c("ABCA1","ABCBB"), mart= human)
listAttributes()
listAttributes(human)
listAttributes(human)[1:5]
listAttributes(human)[1:5,]
listAttributes(human)[1:10,]
listAttributes(human)[1:11,]
gene_list_human <- getBM( attributes=c("ensembl_gene_id", "hgnc_symbol") , filters=
"ensembl_gene_id", values =c("ABCA1","ABCBB") ,mart=human)
gene_list_human
gene_list_human <- getBM( attributes=c("ensembl_gene_id", "gene_names") , filters=
"ensembl_gene_id", values =c("ABCA1","ABCBB") ,mart=human)
listAttributes(human)[1:11,]
listAttributes(human)[1:31,]
gene_list_human <- getBM( attributes=c("ensembl_gene_id", "external_gene_name") , filters=
"ensembl_gene_id", values =c("ABCA1","ABCBB") ,mart=human)
gene_list_human
gene_list_human <- getBM( attributes=c("ensembl_gene_id", "external_gene_name") , filters=
"external_gene_name", values =c("ABCA1","ABCBB") ,mart=human)
gene_list_human <- getBM( attributes=c("ensembl_gene_id", "external_gene_name") , filters=
"external_gene_name", values =c("ABCA1","ABCBB") ,mart=human)
gene_list_human
branch_length <- 1;
start_point <- 0;
precision <- 1000;
diffusion <- 1;
brown <- c(0, cumsum(rnorm(n = branch_length*precision, sd = sqrt(diffusion/precision))))
length(brown)
points_of_interest <- seq(1, length(brown), length.out=100);
points_of_interest
N_genes <- 200;
start_genes <- rnorm(200, 100, 100);
start_genes
brown <- matrix(0, branch_length*precision, N_genes);
while(m <=Nsim){
brown[,m] <- start_genes[,m]+ c(0, cumsum(rnorm(n = branch_length*precision, sd = sqrt(diffusion/precision))))
}
N_genes <- 200;
start_genes <- rnorm(200, 100, 100);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[,m]+ c(0, cumsum(rnorm(n = branch_length*precision, sd = sqrt(diffusion/precision))))
}
N_genes <- 200;
start_genes <- rnorm(200, 100, 100);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = branch_length*precision, sd = sqrt(diffusion/precision))))
}
points_of_interest <- seq(1, dim(brown)[1], length.out=100);
brown_sampled <- brown[points_of_interest,];
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
}
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
m=m+1
}
dim(brown)
N_genes <- 2000;
start_genes <- rnorm(200, 100, 100);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
m=m+1
}
points_of_interest <- seq(1, dim(brown)[1], length.out=100);
brown_sampled <- brown[points_of_interest,];
dim(brown_sampled)
pmd_brown <- PMA::PMD(brown_sampled, sumabs=1, sumabsu = 1, K=2, niter=50)
pmd_brown <- PMA::PMD(brown_sampled, sumabs=1, sumabsu = 1, K=2, niter=50, center=TRUE)
pmd_brown$u
pmd_brown <- PMA::PMD(brown_sampled, upos=TRUE, vpos=TRUE, center=TRUE,
sumabs=1)
pmd_brown <- PMA::PMD(exp(brown_sampled/1000), upos=TRUE, vpos=TRUE, center=TRUE,
sumabs=1)
pmd_brown
pmd_brown$u
dim(brown_sampled$u)
dim(pmd_brown$u)
pmd_brown <- PMA::PMD(exp(brown_sampled/1000), upos=TRUE, vpos=TRUE, center=TRUE,
sumabs=1, K=2)
dim(pmd_brown$u)
pmd_brown$u
pmd_brown <- PMA::PMD(exp(brown_sampled/1000), upos=TRUE, vpos=TRUE, center=TRUE,
sumabs=1, K=3)
pmd_brown$u
exp(brown_sampled/1000)
brown_sampled
dim(brown)
points_of_interest
points_of_interest <- floor(seq(1, dim(brown)[1], length.out=100));
points_of_interest
brown_sampled <- brown[points_of_interest,];
pmd_brown <- PMA::PMD(exp(brown_sampled/1000), upos=TRUE, vpos=TRUE, center=TRUE,
sumabs=1, K=3)
pmd_brown$u
exp(brown_sampled/1000)
brown_sampled
brown_sampled <- brown[points_of_interest,];
brown_sampled
brown
start_genes[m]
N_genes <- 2000;
start_genes <- rnorm(N_genes, 100, 100);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
m=m+1
}
brown
points_of_interest <- floor(seq(1, dim(brown)[1], length.out=100));
brown_sampled <- brown[points_of_interest,];
pmd_brown <- PMA::PMD(exp(brown_sampled/1000), upos=TRUE, vpos=TRUE, center=TRUE,
sumabs=1, K=3)
pmd_brown$upos
pmd_brown$u
exp(brown_sampled/1000)
pmd_brown <- PMA::PMD(exp(brown_sampled/10), upos=TRUE, vpos=TRUE, center=TRUE,
sumabs=1, K=2)
pmd_brown$u
exp(brown_sampled/10)
pmd_brown <- PMA::PMD(brown_sampled, center=TRUE,
sumabs=1, K=2)
pmd_brown$u
brown_sampled
branch_length <- 1;
start_point <- 0;
precision <- 1000;
diffusion <- 10;
N_genes <- 2000;
start_genes <- rnorm(N_genes, 100, 100);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
m=m+1
}
points_of_interest <- floor(seq(1, dim(brown)[1], length.out=100));
brown_sampled <- brown[points_of_interest,];
pmd_brown <- PMA::PMD(brown_sampled, center=TRUE,
sumabs=1, K=2)
brown_sampled[,1]
brown_sampled[,2]
simData <- matrix(0, length(num_nodes),Nsim);
branch_length <- 1;
start_point <- 0;
precision <- 1000;
diffusion <- 100;
N_genes <- 2000;
start_genes <- rnorm(N_genes, 100, 100);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
m=m+1
}
branch_length <- 1;
start_point <- 0;
precision <- 1000;
diffusion <- 100;
N_genes <- 2000;
start_genes <- rnorm(N_genes, 100, 100);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
dim(brown)
c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
N_genes <- 2000;
start_genes <- rnorm(N_genes, 0, 10);
m <- 1
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
m=m+1
}
brown
brown[,1]
points_of_interest <- floor(seq(1, dim(brown)[1], length.out=100));
brown_sampled <- brown[points_of_interest,];
pmd_brown <- PMA::PMD(brown_sampled, center=TRUE,
sumabs=1, K=2)
pmd_brown
pmd_brown$u
m <- 1
plot(c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision)))))
start_genes[1]
start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
plot(c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision)))))
set.see(10)
set.seed(10)
plot(c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision)))))
plot(c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision)))))
set.seed(10)
plot(c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision)))))
start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
brown <- matrix(0, branch_length*precision, N_genes);
while(m <= N_genes){
brown[,m] <- start_genes[m]+ c(0, cumsum(rnorm(n = (branch_length*precision-1), sd = sqrt(diffusion/precision))))
m=m+1
}
points_of_interest <- floor(seq(1, dim(brown)[1], length.out=100));
brown_sampled <- brown[points_of_interest,];
pmd_brown <- PMA::PMD(brown_sampled, center=TRUE,
sumabs=1, K=2)
pmd_brown$u
pmd_brown <- PMA::PMD(brown_sampled, center=TRUE,
sumabs=1, K=3)
pmd_brown$u
plot(pmd_brown$u[,2])
plot(pmd_brown$u[,3])
pmd_brown <- PMA::PMD(brown_sampled, center=TRUE,
sumabs=1, K=2)
plot(pmd_brown$u[,2])
dim(brown_sampled)
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
Sys.getenv("MOSEKLM_LICENSE_FILE")
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
Sys.getenv("MOSEKLM_LICENSE_FILE")
source('~/Documents/dr-tree/analysis/KDey/R/mixIP_test.R')
RcppArmadillo::RcppArmadillo.package.skeleton()
RcppArmadillo::RcppArmadillo.package.skeleton(package="flashx",path="~/Documents/")
RcppArmadillo::RcppArmadillo.package.skeleton(name ="flashx",path="~/Documents/")
library(singleCellRNASeqMouseDeng2014)
counts <- exprs(Deng2014MouseESC)
meta_data <- pData(Deng2014MouseESC)
gene_names <- rownames(counts)
voom_data <- t(limma::voom(counts)$E);
block_index <- vector(mode="list")
block_index[[1]] <- 1:dim(voom_data)[1];
out_pca_knn <- pca.knn(voom_data, block_index = block_index)
source('~/Documents/dr-tree/analysis/KDey/R/pca_knn_block_dist.R')
out_pca_knn <- pca.knn(voom_data, block_index = block_index)
source('~/Documents/dr-tree/analysis/KDey/R/pca_knn.R')
out_pca_knn <- pca.knn(voom_data, block_index = block_index)
source('~/Documents/dr-tree/analysis/KDey/R/knn_block_mstree_dist.R')
out_pca_knn <- pca.knn(voom_data, block_index = block_index)
pr_data_frame <- data.frame("PC"=out_pca_knn,
"labels"=factor(meta_data$cell_type,
levels=c("zy","early2cell",
"mid2cell", "late2cell",
"4cell", "8cell", "16cell",
"earlyblast", "midblast", "lateblast")))
ggplot2::qplot(PC.PC1, PC.PC2,
data=pr_data_frame,
colour=labels)
setwd("~/Documents/ancient-damage/R")
ancient_files <- list.files("../summary_data/153-ancients-signature-counts/csv/")
length(ancient_files)
ancient_files <- list.files("../summary_data/153-ancients-signature-counts/csv/")
length(ancient_files)
