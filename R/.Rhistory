x <- c(0, 0, 1, 1, 0.3, 0.3, 0.5, 0.5, 0.3, 0.3, 1, 1)
y <- c(0,1,1,0.8,0.8,0.5,0.5,0.4,0.4,0.2,0.2,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.2, 0.2, 0.5, 0.5, 0.2, 0.2, 1, 1)
y <- c(0,1,1,0.85,0.85,0.6,0.6,0.45,0.45,0.2,0.2,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15, 1, 1)
y <- c(0,1,1,0.85,0.85,0.6,0.6,0.45,0.45,0.2,0.2,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15, 1, 1)
y <- c(0,1,1,0.85,0.85,0.6,0.6,0.45,0.45,0.15,0.15,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15, 1, 1)
y <- c(0,1,1,0.85,0.85,0.6,0.6,0.40,0.40,0.15,0.15,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15, 1, 1)
y <- c(0,1,1,0.85,0.85,0.58,0.58,0.43,0.43,0.18,0.18,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
0.85-0.275
0.425 -.275
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15, 1, 1)
y <- c(0,1,1,0.85,0.85,0.575,0.575,0.425,0.425,0.15,0.15,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15)
y <- c(0,1,1,0.85,0.85,0.575,0.575,0.425,0.425,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,10)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
source('~/Documents/Logolas/Fletter.R')
source('~/Documents/Logolas/Eletter.R')
source('~/Documents/Logolas/Fletter.R')
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 0.25, 0.25, 0.75, 0.75, 1, 0, 0.75, 0.75, 0.25, 0)
y <- c(0, 1, 1, 0.6, 0.6, 1, 1, 0, 0, 0.4, 0.4, 0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,10)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 0.25, 0.25, 0.75, 0.75, 1, 0, 0.75, 0.75, 0.25, 0)
y <- c(0, 1, 1, 0.6, 0.6, 1, 1, 0, 0, 0.4, 0.4, 0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 0.25, 0.25, 0.75, 0.75, 1, 1, 0.75, 0.75, 0.25, 0)
y <- c(0, 1, 1, 0.6, 0.6, 1, 1, 0, 0, 0.4, 0.4, 0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
source('~/Documents/Logolas/Hletter.R')
source('~/Documents/Logolas/Hletter.R')
source('~/.active-rstudio-document')
source('~/Documents/Logolas/Iletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Lletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
grid.circle(x=0.5, y=0.5, r=0.5, gp=gpar(fill="green"))
grid.circle(x=0.5, y=0.5, r=0.3, gp=gpar(fill="white"))
source('~/Documents/Logolas/Tletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Yletter.R')
source('~/Documents/Logolas/Yletter.R')
setwd("~/Documents/ancient-damage/R")
file <-  read.csv("../summary_data/I0025.q30.csv")
dim(file)
file[1:5,]
dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
dist_from_end
modified_file <- cbind(file[,1], file[,4], dist_from_end)
dim(modified_file)
modified_file[1:5,]
file[1:5,1]
modified_file <- cbind.data.frame(file[,1], file[,4], dist_from_end)
modified_file[1:5,]
colnames(modified_file) <- c("pattern", "counts", "min_dist_from_end")
modified_file[1:5,]
range(dist_from_end)
min(file[,3])
min(file[,2])
which(file[,3]==min(file[,3]))
which(file[,3]==min(file[,3]))[1]
file[which(file[,3]==min(file[,3]))[1],]
file[which(file[,3]==min(file[,3]))[2],]
file[which(file[,2]==min(file[,2]))[2],]
file[which(file[,3]==-1), 3] <- 0
dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
modified_file <- cbind.data.frame(file[,1], file[,4], dist_from_end)
colnames(modified_file) <- c("pattern", "counts", "min_dist_from_end")
range(dist_from_end)
file <-  read.csv("../summary_data/I0025.q30.csv")
file[which(file[,3]==-1), 3] <- 0
min_dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
modified_file <- cbind.data.frame(file[,1], file[,4], min_dist_from_end)
colnames(modified_file) <- c("pattern", "counts", "min_dist_from_end")
bins <- c(5, 10, 15, 20, 30, 40)
.bincode(min_dist_from_end, bins, TRUE)
bins <- c(5, 10, 15, 20, 30, 40, max(min_dist_from_end))
.bincode(min_dist_from_end, bins, TRUE)
bins <- c(5, 10, 15, 20, 30, 40, max(min_dist_from_end))
.bincode(min_dist_from_end, bins, TRUE)
min_dist_from_end[9985]
bins <- c(0, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
.bincode(min_dist_from_end, bins, TRUE)
min_dist_from_end[9986]
min_dist_from_end[9987]
min_dist_from_end[9810]
bins <- c(-1, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
.bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
bin_values <- .bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
colnames(modified_file) <- c("pattern", "counts", "bin_values")
modified_file[1:5,]
modified_table <- tbl_df(modified_file)
modified_table <- dplyr::tbl_df(modified_file)
modified_table
tbl_df <- modified_table %>%
group_by(pattern, bin_values) %>%
summarise(counts = n())
library(dplyr)
tbl_df <- modified_table %>%
group_by(pattern, bin_values) %>%
summarise(counts = n())
tbl_df
tbl_df_united <- tidyr::unite(tbl_df, pattern, bin_values, "_")
tbl_df_united <- tidyr::unite(tbl_df, pattern, bin_values, ".")
tbl_df_united <- tbl_df %>% unite(pattern, bin_values, sep=".")
library(tidyr)
tbl_df_united <- tbl_df %>% unite(pattern, bin_values, sep=".")
tbl_df_united
tbl_df
data_mod < data.frame(tbl_df)
data_mod <- data.frame(tbl_df)
dim(data_mod)
data_mod_2 <- cbind.data.frame(paste0(data_mod[,1], data_mod[,2]), data_mod[,3])
dim(data_mod_2)
data_mod_2[1:5,]
data_mod <- data.frame(tbl_df)
colnames(data_mod) <- c("pattern", "bin", "counts")
data_mod_2 <- cbind.data.frame(paste0(data_mod[,1], data_mod[,2]), data_mod[,3])
colnames(data_mod_2) <- c("pattern-bins", "counts")
data_mod[1:5,]
data_mod_2[1:5,]
grep("C->T", data_mod$pattern)
data_mod[grep("C->T", data_mod$pattern),]
C_to_T_data <- data_mod[grep("C->T", data_mod$pattern),]
C_to_T_data_df <- tbl_df(C_to_T_data)
C_to_T_data_df
bin_counts_C_to_T <- C_to_T_data_df
%>% filter(c("bin", "counts"))
%>% group_by("bin")
bin_counts_C_to_T <- C_to_T_data_df %>%
filter(c("bin", "counts")) %>%
group_by("bin")
bin_counts_C_to_T <- C_to_T_data_df %>%
select(bin, counts) %>%
group_by(bin)
bin_counts_C_to_T
bin_counts_C_to_T <- C_to_T_data_df %>%
select(bin, counts) %>%
group_by(bin) %>%
summarise(counts=n())
bin_counts_C_to_T
C_to_T_data_df %>%
+                       select(bin, counts)
C_to_T_data_df %>% select(bin, counts)
bin_counts_C_to_T <- C_to_T_data_df %>%
select(bin, counts) %>%
summarise(counts=n())
bin_counts_C_to_T
bin_counts_C_to_T <- C_to_T_data_df %>%
select(bin, counts) %>%
group_by(bin) %>%
summarise(counts=n())
bin_counts_C_to_T
file <-  read.csv("../summary_data/I0026.q30.csv")
file[which(file[,3]==-1), 3] <- 0
min_dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
bins <- c(-1, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
bin_values <- .bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
colnames(modified_file) <- c("pattern", "counts", "bin_values")
modified_table <- dplyr::tbl_df(modified_file)
library(dplyr)
tbl_df <- modified_table %>%
group_by(pattern, bin_values) %>%
summarise(counts = n())
data_mod <- data.frame(tbl_df)
colnames(data_mod) <- c("pattern", "bin", "counts")
data_mod_2 <- cbind.data.frame(paste0(data_mod[,1], data_mod[,2]), data_mod[,3])
colnames(data_mod_2) <- c("pattern-bins", "counts")
C_to_T_data <- data_mod[grep("C->T", data_mod$pattern),]
C_to_T_data_df <- tbl_df(C_to_T_data)
bin_counts_C_to_T <- C_to_T_data_df %>%
select(bin, counts) %>%
group_by(bin) %>%
summarise(counts=n())
bin_counts_C_to_T
file <-  read.csv("../summary_data/I0046.q30.csv")
file[which(file[,3]==-1), 3] <- 0
min_dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
bins <- c(-1, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
bin_values <- .bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
colnames(modified_file) <- c("pattern", "counts", "bin_values")
modified_table <- dplyr::tbl_df(modified_file)
library(dplyr)
tbl_df <- modified_table %>%
group_by(pattern, bin_values) %>%
summarise(counts = n())
data_mod <- data.frame(tbl_df)
colnames(data_mod) <- c("pattern", "bin", "counts")
data_mod_2 <- cbind.data.frame(paste0(data_mod[,1], data_mod[,2]), data_mod[,3])
colnames(data_mod_2) <- c("pattern-bins", "counts")
C_to_T_data <- data_mod[grep("C->T", data_mod$pattern),]
C_to_T_data_df <- tbl_df(C_to_T_data)
bin_counts_C_to_T <- C_to_T_data_df %>%
select(bin, counts) %>%
group_by(bin) %>%
summarise(counts=n())
bin_counts_C_to_T
C_to_A_data <- data_mod[grep("C->A", data_mod$pattern),]
C_to_A_data_df <- tbl_df(C_to_T_data)
bin_counts_C_to_T <- C_to_T_data_df %>%
select(bin, counts) %>%
group_by(bin) %>%
summarise(counts=n())
bin_counts_C_to_T
C_to_A_data <- data_mod[grep("C->A", data_mod$pattern),]
C_to_A_data_df <- tbl_df(C_to_A_data)
bin_counts_C_to_A <- C_to_A_data_df %>%
select(bin, counts) %>%
group_by(bin) %>%
summarise(counts=n())
bin_counts_C_to_A
grep("C->A", data_mod$pattern)
data_mod[grep("C->A", data_mod$pattern),1]
tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
C_to_A_data_df
bin_counts_C_to_A <- tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
bin_counts_C_to_A
barplot(bin_counts_C_to_A)
barplot(bin_counts_C_to_A, main="C to A damage numbers", density = TRUE)
C_to_T_data <- data_mod[grep("C->T", data_mod$pattern),1]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
C_to_T_data <- data_mod[grep("C->T", data_mod$pattern)]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
C_to_T_data <- data_mod[grep("C->T", data_mod$pattern)]
C_to_T_data <- data_mod[grep("C->T", data_mod$pattern),]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
C_to_A_data <- data_mod[grep("C->A", data_mod$pattern),]
bin_counts_C_to_A <- tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
barplot(bin_counts_C_to_A, main="C to A damage numbers")
data_mod[grep("C->T", data_mod$pattern),1]
head(modified_table)
tapply(modified_table$counts, modified_table$counts, sum)
tapply(modified_table$counts, modified_table$bin_values, sum)
tapply(data_mod$counts, data_mod$bin, sum)
modified_table_merge <- cbind.data.frame(paste0(modified_table[,1], "_", modified_table[,2]),
modified_table[,3])
)
paste0(modified_table[,1], "_", modified_table[,2])
View(modified_table_merge)
modified_table[1:5,1]
