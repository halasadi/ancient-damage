import glob, os


ANCIENT_SAMPLES = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/mstephens/ancient-damage/data/*.bam")))]

workdir: '/project/mstephens/ancient-damage/'

rule all:
    input:
        expand('csv/{sample}.q30.csv', sample = ANCIENT_SAMPLES)

rule index_bams:
    input:
        bam = 'data/{sample}.bam'
    output:
        bai = 'data/{sample}.bam.bai'
    shell:
        'samtools index {input.bam}'
        
rule call_damage:
    input:
        bam = 'data/{sample}.bam',
        bai = 'data/{sample}.bam.bai',
        ref = '/project/jnovembre/data/external_public/reference_genomes/hs37d5.fa'
    output:
        'csv/{sample}.q30.csv'
        #'csv/{sample}.q30.leftflank.csv',
        #'csv/{sample}.q30.rightflank.csv'
    params:
        prefix = 'csv/{sample}.q30' 
    run:
        inp = wildcards.sample
        if (inp.startswith('RISE') or inp.startswith('ADR') or inp.startswith('I') or inp.startswith('LON') or
            inp.startswith('SUA') or inp.startswith('Ust') or inp.startswith('Altai') or inp.startswith('DNK')):
            shell('python bin/generate_summary_data_tags.py -b {input.bam} -o {params.prefix} -f {input.ref}')
        else:
            shell('python bin/generate_summary_data_tags.py -b {input.bam} -o {params.prefix} -f {input.ref} --add-chr')

