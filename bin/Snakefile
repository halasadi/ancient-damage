import glob, os


TBTN = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/TBTN_aDNA/*.bam")))]

ALLENTOFT = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Allentoft/*.bam")))]

#ANCIENT_SHERPA = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/ancient_sherpa/*.bam")))]

DENISOVA = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Denisova/*.bam")))]

FU = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Fu_2016/*.bam")))]

JONES = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Jones_2015/*.bam")))]

PINHASI = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Pinhasi_2014/*.bam")))]

SIBERIA = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Siberian_MA-1_1stExtraction/*.bam")))]

SKOGLUND = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Skoglund/*.bam")))]

ICEMAN = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Tyrolean_Iceman/*.bam")))]

UST = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Ust/*.bam")))]

GOSLING = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Gosling/*.bam")))]

LINDO = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Lindo2016/*.bam")))]

MODERNS = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/moderns/*.bam")))]

SARDINIA = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/sardinia/*.bam")))]

LAZARIDIS = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Lazaridis/*.bam")))]

ALTAI = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Altai/*.bam")))]

NEANDERTHAL = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/neanderthal/*.bam")))]

GOSLING_2017 = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Gosling_2017/*.bam")))]

CONTAMINATED = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/contaminated/*.bam")))]

RAGHAVAN =  [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Raghavan/*.bam")))]

MATHIESON = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Mathieson_2015/*.bam")))]

HAAK = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Haak_2015/*.bam")))]

SUBSET = [os.path.splitext(x)[0] for x in list(map(os.path.basename, glob.glob("/project/compbio/ancient-damage/data/bam/Mathieson_2015_subsampled/*.bam")))]


NO_TAGS = ["moderns", "Tyrolean_Iceman", "Skoglund", "Pinhasi_2014", "Fu_2016"]
NO_CHR_PREFIX = ["Altai", "Fu_2016", "Denisova", "Lindo2017", "Siberian_MA-1_1stExtraction", "Skoglund", "Allentoft", "Gosling", "Reich", "sardinia", "Ust", "Altai", "moderns", "Lazaridis", "Gosling_2017", "Raghavan", "Mathieson_2015", "Haak_2015", "Mathieson_2015_subsampled", "Tibetans", "TBTN_aDNA"]

workdir: '/project/compbio/ancient-damage/'

rule all:
    input:
#        expand('data/csv/Allentoft/{sample}.q30.csv', sample = ALLENTOFT),
#        expand('data/csv/ancient_sherpa/{sample}.q30.csv', sample = ANCIENT_SHERPA),
#        expand('data/csv/Gosling/{sample}.q30.csv', sample = GOSLING),
#        expand('data/csv/Lindo2016/{sample}.q30.csv', sample = LINDO),
#        expand('data/csv/moderns/{sample}.q30.csv', sample = MODERNS),
#        expand('data/csv/sardinia/{sample}.q30.csv', sample = SARDINIA),
#        expand('data/csv/Denisova/{sample}.q30.csv', sample = DENISOVA),
#        expand('data/csv/Fu_2016/{sample}.q30.csv', sample = FU),
#        expand('data/csv/Jones_2015/{sample}.q30.csv', sample = JONES),
#        expand('data/csv/Pinhasi_2014/{sample}.q30.csv', sample = PINHASI),
#        expand('data/csv/Siberian_MA-1_1stExtraction/{sample}.q30.csv', sample = SIBERIA),
#        expand('data/csv/Skoglund/{sample}.q30.csv', sample = SKOGLUND),
        expand('data/csv/TBTN_aDNA/{sample}.q30.csv', sample = TBTN)
#        expand('data/csv/Tyrolean_Iceman/{sample}.q30.csv', sample = ICEMAN),
#        expand('data/csv/Ust/{sample}.q30.csv', sample = UST),
#        expand('data/csv/Lazaridis/{sample}.q30.csv', sample = LAZARIDIS),
#        expand('data/csv/Gosling_2017/{sample}.q30.csv', sample = GOSLING_2017),
#        expand('data/csv/Raghavan/{sample}.q30.csv', sample = RAGHAVAN),
#        expand('data/csv/Mathieson_2015/{sample}.q30.csv', sample = MATHIESON),
#        expand('data/csv/Mathieson_2015_subsampled/{sample}.q30.csv', sample = SUBSET),
#        expand('data/csv/Haak_2015/{sample}.q30.csv', sample = HAAK),
#        expand('data/csv/Tibetans/{sample}.q30.csv', sample = TIBETANS),
#        expand('data/csv/Altai/{sample}.q30.csv', sample = ALTAI)

rule index_bams:
    input:
        bam = 'data/bam/{dir}/{sample}.bam'
    output:
        bai = 'data/bam/{dir}/{sample}.bam.bai'
    shell:
        'samtools index {input.bam}'
        
rule call_damage:
    input:
        bam = 'data/bam/{dir}/{sample}.bam',
        bai = 'data/bam/{dir}/{sample}.bam.bai',
        ref = '/project/jnovembre/data/external_public/reference_genomes/hs37d5.fa'
    output:
        'data/csv/{dir}/{sample}.q30.csv'
    run:
        study = wildcards.dir

        if (study in NO_CHR_PREFIX and study in NO_TAGS):
            shell('python bin/generate_summary_bams.py -b {input.bam} -o {output} -f {input.ref} --dont-use-tags')
        elif (study not in NO_CHR_PREFIX and study in NO_TAGS):
            shell('python bin/generate_summary_bams.py -b {input.bam} -o {output} -f {input.ref} --dont-use-tags --add-chr')
        elif (study in NO_CHR_PREFIX and study not in NO_TAGS):
            shell('python bin/generate_summary_bams.py -b {input.bam} -o {output} -f {input.ref}')
        elif (study not in NO_CHR_PREFIX and study not in NO_TAGS):
            shell('python bin/generate_summary_bams.py -b {input.bam} -o {output} -f {input.ref} --add-chr')
        else:
            print("ERROR")
            #except Exception as e: print(e)
        #else:
        #    shell('python bin/generate_summary_bams.py -b {input.bam} -o {output} -f {input.ref} --add-chr')
