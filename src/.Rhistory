id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15, 1, 1)
y <- c(0,1,1,0.85,0.85,0.58,0.58,0.43,0.43,0.18,0.18,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
0.85-0.275
0.425 -.275
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15, 1, 1)
y <- c(0,1,1,0.85,0.85,0.575,0.575,0.425,0.425,0.15,0.15,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 1, 1, 0.15, 0.15, 0.5, 0.5, 0.15, 0.15)
y <- c(0,1,1,0.85,0.85,0.575,0.575,0.425,0.425,0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,10)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
source('~/Documents/Logolas/Fletter.R')
source('~/Documents/Logolas/Eletter.R')
source('~/Documents/Logolas/Fletter.R')
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 0.25, 0.25, 0.75, 0.75, 1, 0, 0.75, 0.75, 0.25, 0)
y <- c(0, 1, 1, 0.6, 0.6, 1, 1, 0, 0, 0.4, 0.4, 0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,10)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 0.25, 0.25, 0.75, 0.75, 1, 0, 0.75, 0.75, 0.25, 0)
y <- c(0, 1, 1, 0.6, 0.6, 1, 1, 0, 0, 0.4, 0.4, 0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
x <- c(0, 0, 0.25, 0.25, 0.75, 0.75, 1, 1, 0.75, 0.75, 0.25, 0)
y <- c(0, 1, 1, 0.6, 0.6, 1, 1, 0, 0, 0.4, 0.4, 0)
#x <- 0.1*x
#y <- 0.1*y
id <- rep(1,12)
fill_symbol <- TRUE
if(fill_symbol){
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(fill="green",
lwd=1))
}else{
grid.polygon(x, y,
default.unit="native",
id=id,
gp=gpar(col="green",
lwd=10))
}
source('~/Documents/Logolas/Hletter.R')
source('~/Documents/Logolas/Hletter.R')
source('~/.active-rstudio-document')
source('~/Documents/Logolas/Iletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Jletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Kletter.R')
source('~/Documents/Logolas/Lletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Mletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
source('~/Documents/Logolas/Nletter.R')
grid.newpage()
pushViewport(viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid.rect(gp=gpar(col="grey"))
grid.circle(x=0.5, y=0.5, r=0.5, gp=gpar(fill="green"))
grid.circle(x=0.5, y=0.5, r=0.3, gp=gpar(fill="white"))
source('~/Documents/Logolas/Tletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Vletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Wletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Xletter.R')
source('~/Documents/Logolas/Yletter.R')
source('~/Documents/Logolas/Yletter.R')
setwd("~/Documents/ancient-damage/R")
file <-  read.csv("../summary_data/I0046.q30.csv")
file[which(file[,3]==-1), 3] <- 0
min_dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
bins <- c(-1, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
bin_values <- .bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
colnames(modified_file) <- c("pattern", "counts", "bin_values")
modified_table <- dplyr::tbl_df(modified_file)
dim(modified_file)
modified_file[1:5,1]
modified_file[1:5,]
df1 <- ddply(modified_file, .(pattern, counts), summarise, newvar = sum(bin_values))
library(plyr)
df1 <- ddply(modified_file, .(pattern, counts), summarise, newvar = sum(bin_values))
dim(df1)
df1[1:5,]
tapply(df1$counts, df1$newvar, sum)
df1[1:5,]
df1 <- ddply(modified_file, .(pattern, bin_values), summarise, newvar = sum(bin_values))
df1[1:5,]
df1 <- ddply(modified_file, .(pattern, bin_values), summarise, newvar = sum(counts))
df1[1:5,]
tapply(df1$newvar, df1$bin_values, sum)
colnames(df1) <- c("pattern", "bin", "counts")
df2 <- cbind.data.frame(paste0(df1[,1], df1[,2]), df1[,3])
colnames(df2) <- c("pattern-bins", "counts")
df2[1:5,]
df2 <- cbind.data.frame(paste0(df1[,1], "_", df1[,2]), df1[,3])
colnames(df2) <- c("pattern-bins", "counts")
df2[1:5,]
C_to_A_data <- df1[grep("C->A", df1$pattern),]
bin_counts_C_to_A <- tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
barplot(bin_counts_C_to_A, main="C to A damage numbers")
C_to_T_data <- df1[grep("C->T", df1$pattern),1]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
C_to_T_data <- df1[grep("C->T", df1$pattern),]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
file <-  read.csv("../summary_data/I0026.q30.csv.q30")
file[which(file[,3]==-1), 3] <- 0
min_dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
bins <- c(-1, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
bin_values <- .bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
colnames(modified_file) <- c("pattern", "counts", "bin_values")
library(plyr)
df1 <- ddply(modified_file, .(pattern, bin_values), summarise, newvar = sum(counts))
colnames(df1) <- c("pattern", "bin", "counts")
tapply(df1$newvar, df1$bin_values, sum)
df2 <- cbind.data.frame(paste0(df1[,1], "_", df1[,2]), df1[,3])
colnames(df2) <- c("pattern-bins", "counts")
C_to_A_data <- df1[grep("C->A", df1$pattern),]
bin_counts_C_to_A <- tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
barplot(bin_counts_C_to_A, main="C to A damage numbers")
C_to_T_data <- df1[grep("C->T", df1$pattern),]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
file <-  read.csv("../summary_data/I0026.q30.csv")
file[which(file[,3]==-1), 3] <- 0
min_dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
bins <- c(-1, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
bin_values <- .bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
colnames(modified_file) <- c("pattern", "counts", "bin_values")
library(plyr)
df1 <- ddply(modified_file, .(pattern, bin_values), summarise, newvar = sum(counts))
colnames(df1) <- c("pattern", "bin", "counts")
tapply(df1$newvar, df1$bin_values, sum)
df2 <- cbind.data.frame(paste0(df1[,1], "_", df1[,2]), df1[,3])
colnames(df2) <- c("pattern-bins", "counts")
C_to_A_data <- df1[grep("C->A", df1$pattern),]
bin_counts_C_to_A <- tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
barplot(bin_counts_C_to_A, main="C to A damage numbers")
C_to_T_data <- df1[grep("C->T", df1$pattern),]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
tapply(df1$counts, df1$bin_values, sum)
library(plyr)
df1 <- ddply(modified_file, .(pattern, bin_values), summarise, newvar = sum(counts))
colnames(df1) <- c("pattern", "bin", "counts")
tapply(df1$counts, df1$bin_values, sum)
length(df1$bin)
length(df1$counts)
tapply(df1$counts, df1$bin, sum)
file <-  read.csv("../summary_data/I0026.q30.csv")
file[which(file[,3]==-1), 3] <- 0
min_dist_from_end <- apply(file[,2:3], 1, function(x) return(min(x)))
bins <- c(-1, 5, 10, 15, 20, 30, 40, max(min_dist_from_end))
bin_values <- .bincode(min_dist_from_end, bins, TRUE)
modified_file <- cbind.data.frame(file[,1], file[,4], bin_values)
colnames(modified_file) <- c("pattern", "counts", "bin_values")
library(plyr)
df1 <- ddply(modified_file, .(pattern, bin_values), summarise, newvar = sum(counts))
colnames(df1) <- c("pattern", "bin", "counts")
tapply(df1$counts, df1$bin, sum)
df2 <- cbind.data.frame(paste0(df1[,1], "_", df1[,2]), df1[,3])
colnames(df2) <- c("pattern-bins", "counts")
C_to_A_data <- df1[grep("C->A", df1$pattern),]
bin_counts_C_to_A <- tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
barplot(bin_counts_C_to_A, main="C to A damage numbers")
C_to_T_data <- df1[grep("C->T", df1$pattern),]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
(-1):max(min_dist_from_end)
breaks <- c(-1, 5, 10, 15, 20, 30, 40, 100)
breaks
intersect(breaks, (-1):max(min_dist_from_end))
out <- damage.build.counts(file="../summary_data/I0026.q30.csv")
source('~/Documents/ancient-damage/R/damage.build.counts.R')
source('~/Documents/ancient-damage/R/damage.build.counts.R')
source('~/Documents/ancient-damage/R/damage.build.counts.R')
dim(out)
out[1:5,]
df1 <- damage.build.counts(file="../summary_data/I0026.q30.csv")
df2 <- cbind.data.frame(paste0(df1[,1], "_", df1[,2]), df1[,3])
colnames(df2) <- c("pattern-bins", "counts")
C_to_A_data <- df1[grep("C->A", df1$pattern),]
bin_counts_C_to_A <- tapply(C_to_A_data[,3], C_to_A_data[,2], sum)
barplot(bin_counts_C_to_A, main="C to A damage numbers")
C_to_T_data <- df1[grep("C->T", df1$pattern),]
bin_counts_C_to_T <- tapply(C_to_T_data[,3], C_to_T_data[,2], sum)
barplot(bin_counts_C_to_T, main="C to T damage numbers")
data <- read.csv(file="../summary_data/I0026.q30.csv")
dim(data)
head(data)
pattern_data <- data[grep(pattern, data[,1]),]
pattern <- "C->T"
pattern_data <- data[grep(pattern, data[,1]),]
dim(pattern_data)
head(pattern_data)
data <- read.csv(file="../summary_data/I0026.q30.csv", header=FALSE)
head(data)
pattern <- "C->T"
pattern_data <- data[grep(pattern, data[,1]),]
dim(pattern_data)
head(pattern_data)
tab_C_to_T_left <- table(pattern_data[,c(2,4)]);
tab_C_to_T_left
pattern_data[1:10,c(2,4)]
data[1:10,c(2,4)]
pattern_data[1:10,]
tab_C_to_T_left <- tapply(pattern_data[,4], pattern_data[,4], sum);
tab_C_to_T_left
tab_C_to_T_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
tab_C_to_T_left
tab_C_to_T_left <- tapply(pattern_data[,4], pattern_data[,2], sum)[1:20];
tab_C_to_T_left
tab_C_to_T_right <- tapply(pattern_data[,4], pattern_data[,3], sum)[1:20];
tab_C_to_T_right
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
tab_C_to_T_left <- tapply(pattern_data[,4], pattern_data[,2], sum)[1:20];
tab_C_to_T_right <- tapply(pattern_data[,4], pattern_data[,3], sum)[1:20];
tab_C_to_T_right
tab_C_to_T_left
tab_C_to_T_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
barplot(tab_C_to_T_left)
barplot(tab_C_to_T_left, main="C to T damages", xlab="read position (left)",
ylab="counts of damages")
lo <- loess(tab_C_to_T_right~names(tab_C_to_T_right))
lo
plot(lo)
names(tab_C_to_T_right)
names(tab_C_to_T_left)
as.numeric(names(tab_C_to_T_left))
plot(as.numeric(names(tab_C_to_T_left)),as.numeric(tab_C_to_T_right))
plot(as.numeric(names(tab_C_to_T_left)),as.numeric(tab_C_to_T_left))
lo <- loess(as.numeric(tab_C_to_T_left)~as.numeric(names(tab_C_to_T_left))
)
lines(predict(lo), col='red', lwd=2)
plot(predict(lo), col='red', lwd=2)
plot(predict(lo), col='red', lwd=2, type="l")
plot(predict(lo), col='red', lwd=2, type="l",
ylab="predicted C to T damages",
xlab="read positions")
par(mfrow=c(1,2))
barplot(data2,axes=F,horiz=T,axisnames=FALSE,
xlim=c(-8,0))
#creating a new axis with desired labels
axis(side=1,at=seq(-8,0,2),labels=c(8,6,4,2,0))
barplot(data1,horiz=T,axes=T,las=1)
names<-LETTERS[1:9]
data1<-c(8, 6, 3, 2, 0, 1, 1, 3, 1)
data2<-c(0, -1,  0,  0,  0,  0,  0, -2, -1)#negative to show them on the
#left side of yaxis
par(mfrow=c(1,2))
barplot(data2,axes=F,horiz=T,axisnames=FALSE,
xlim=c(-8,0))
#creating a new axis with desired labels
axis(side=1,at=seq(-8,0,2),labels=c(8,6,4,2,0))
barplot(data1,horiz=T,axes=T,las=1)
x<-c(1,4,7,9,10,15)
y<-c(3,5,8,6,5,14)
x1<-x[rev(order(x))]
plot(x1,y,xlim=rev(range(x)))
pattern <- "G->A"
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
tab_pattern_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
tab_pattern_right <- tapply(pattern_data[,4], pattern_data[,3], sum);
lo <- loess(as.numeric(tab_pattern_right)~as.numeric(names(tab_pattern_right)))
plot(as.numeric(names(tab_pattern_right)),as.numeric(tab_pattern_right))
plot(predict(lo), col='red', lwd=2, type="l",
ylab="predicted C to T damages",
xlab="read positions (from right)",
main="G to A damages")
plot(rev(predict(lo)), col='red', lwd=2, type="l",
ylab="predicted G to A damages",
xlab="read positions (from right)",
main="G to A damages",
xlim=rev(as.numeric(names(tab_pattern_right))))
rev(as.numeric(names(tab_pattern_right)))
rev(predict(lo))
plot(rev(predict(lo)), col='red', lwd=2, type="l",
ylab="predicted G to A damages",
xlab="read positions (from right)",
main="G to A damages",
xlim=rev(as.numeric(names(tab_pattern_right))))
plot(rev(predict(lo)), col='red', lwd=2, type="l",
ylab="predicted G to A damages",
xlab="read positions (from right)",
main="G to A damages",
xlim=rev(range(as.numeric(names(tab_pattern_right)))))
plot(rev(predict(lo)), col='red', lwd=2, type="l",
ylab="predicted G to A damages",
xlab="read positions (from right)",
main="G to A damages",
xlim=rev(range(as.numeric(names(tab_pattern_right)))))
plot(predict(lo), col='red', lwd=2, type="l",
ylab="predicted G to A damages",
xlab="read positions (from right)",
main="G to A damages",
xlim=rev(range(as.numeric(names(tab_pattern_right)))))
pattern <- "C->A"
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
tab_pattern_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
tab_pattern_right <- tapply(pattern_data[,4], pattern_data[,3], sum);
lo <- loess(as.numeric(tab_pattern_right)~as.numeric(names(tab_pattern_right)))
#plot(as.numeric(names(tab_pattern_right)),as.numeric(tab_pattern_right))
plot(predict(lo), col='red', lwd=2, type="l",
ylab="predicted G to A damages",
xlab="read positions (from right)",
main="G to A damages",
xlim=rev(range(as.numeric(names(tab_pattern_right)))))
tab_pattern_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
lo <- loess(as.numeric(tab_pattern_left)~as.numeric(names(tab_pattern_left)))
#plot(as.numeric(names(tab_pattern_right)),as.numeric(tab_pattern_right))
plot(predict(lo), col='red', lwd=2, type="l",
ylab="predicted C to A damages",
xlab="read positions (from left)",
main="C to A damages",
)
source('~/Documents/ancient-damage/R/pattern_plot_damage.R')
source('~/Documents/ancient-damage/R/pattern_plot_damage.R')
pattern_plot(file="../summary_data/I0026.q30.csv",
pattern="C->T",
plot_type="both")
pattern_plot(file="../summary_data/I0026.q30.csv",
pattern="G->A",
plot_type="right")
pattern_plot(file="../summary_data/I0026.q30.csv",
pattern="T->AAG",
plot_type="left")
pattern_plot(file="../summary_data/I0026.q30.csv",
pattern="T->AAG",
plot_type="right")
pattern_plot(file="../summary_data/I0026.q30.csv",
pattern="T->AAG",
plot_type="both")
out <- damage.build.counts(file="../summary_data/I0026.q30.csv")
head(out)
pattern_plot(file="../summary_data/I0026.q30.csv",
pattern="T->A",
plot_type="right")
pattern_plot(file="../summary_data/I0026.q30.csv",
pattern="T->A",
plot_type="left")
pattern <- "T->A"
data <- read.csv(file, header=FALSE)
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
tab_pattern_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
file="../summary_data/I0026.q30.csv"
data <- read.csv(file, header=FALSE)
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
tab_pattern_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
tab_pattern_left
pattern <- "T->AAA"
data <- read.csv(file, header=FALSE)
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
pattern_data <- data[grep(pattern, data[,1]),]
pattern_data[which(pattern_data[,3]==-1), 3] <- 0
tab_pattern_left <- tapply(pattern_data[,4], pattern_data[,2], sum);
tab_pattern_left
tab_pattern_right <- tapply(pattern_data[,4], pattern_data[,3], sum);
tab_pattern_right
range(pattern_data[,3])
range(pattern_data[,2])
